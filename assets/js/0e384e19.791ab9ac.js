"use strict";(self.webpackChunkgttp_documentation=self.webpackChunkgttp_documentation||[]).push([[328],{8084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=n(8776),o=n(1232);const r={slug:"/",sidebar_position:1},s="\ud83d\udc4b Welcome",c={id:"intro",title:"\ud83d\udc4b Welcome",description:"Welcome to the GTTP documentation!",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,unlisted:!1,editUrl:"https://github.com/gttp-cli/gttp/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"docsSidebar",next:{title:"Getting Started",permalink:"/category/getting-started"}},l={},a=[];function d(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"-welcome",children:"\ud83d\udc4b Welcome"}),"\n",(0,i.jsx)(t.p,{children:"Welcome to the GTTP documentation!"}),"\n",(0,i.jsxs)(t.p,{children:["GTTP is an interactive text template parser. It allows you to define text templates with variables and structures via YAMl.\nWhen executing a template, GTTP will interactively ask you to fill out the defined variables and then render the template using the Go package ",(0,i.jsx)(t.a,{href:"https://pkg.go.dev/text/template",children:(0,i.jsx)(t.code,{children:"text/template"})}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Use-cases for GTTP include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Generating configuration files"}),"\n",(0,i.jsx)(t.li,{children:"Creating README files"}),"\n",(0,i.jsx)(t.li,{children:"Writing documentation"}),"\n",(0,i.jsx)(t.li,{children:"E-Mail templates"}),"\n",(0,i.jsx)(t.li,{children:"Ticket templates"}),"\n",(0,i.jsx)(t.li,{children:"and many more..."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1232:(e,t,n)=>{n.d(t,{I:()=>c,M:()=>s});var i=n(5508);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);